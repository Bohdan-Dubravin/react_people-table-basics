{"version":3,"sources":["components/HomePage.tsx","api/api.ts","components/PersonRow.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/ErrorPage.tsx","App.tsx","index.tsx"],"names":["HomePage","URL","fetchPeople","a","fetch","result","ok","Error","status","json","data","PersonRow","person","name","sex","born","died","motherName","fatherName","PeopleTable","peopleList","map","slug","PeoplePage","useState","setPeopleList","useEffect","getPeople","className","ErrorPage","App","to","type","path","element","ReactDOM","render","document","getElementById"],"mappings":"gPAMeA,EANE,WACf,OACE,2C,qCCFEC,EAAM,oEAEL,SAAeC,IAAtB,+B,4CAAO,8BAAAC,EAAA,+EAEkBC,MAAMH,GAFxB,WAEGI,EAFH,QAISC,GAJT,sBAKK,IAAIC,MAAJ,+BAAkCF,EAAOG,SAL9C,uBAQgBH,EAAOI,OARvB,cAQGC,EARH,yBAUIA,GAVJ,4H,sBCIP,IAyBeC,EAzBoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpC,OACE,+BACE,6BACGA,EAAOC,OAEV,6BACGD,EAAOE,MAEV,6BACGF,EAAOG,OAEV,6BACGH,EAAOI,OAEV,6BACGJ,EAAOK,YAAc,MAExB,6BACGL,EAAOM,YAAc,UCiBfC,G,MAlCsB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACtC,OACE,kCACE,gCACE,+BACE,sCAGA,qCAGA,sCAGA,sCAGA,wCAGA,6CAKJ,gCACGA,EAAWC,KAAI,SAAAT,GAAM,OACpB,cAAC,EAAD,CAA6BA,OAAQA,GAArBA,EAAOU,gBCPlBC,EAvBI,WACjB,MAAoCC,mBAA0B,MAA9D,mBAAOJ,EAAP,KAAmBK,EAAnB,KAYA,OAVAC,qBAAU,WAAM,4CACd,4BAAAvB,EAAA,sEACuBD,IADvB,OACQG,EADR,OAGEoB,EAAcpB,GAHhB,4CADc,uBAAC,WAAD,wBAOdsB,KACC,IAGD,sBAAKC,UAAU,GAAf,UACE,6CACCR,GACC,cAAC,EAAD,CAAaA,WAAYA,QChBlBS,EANG,WAChB,OACE,iDCsCWC,EA5BH,WACV,OACE,eAAC,IAAD,WACE,yBAAQF,UAAU,SAAlB,UACE,oBAAIA,UAAU,gBAAd,0BACA,gCACE,cAAC,IAAD,CAAMG,GAAG,QAAT,SACE,wBAAQC,KAAK,SAASJ,UAAU,cAAhC,yBAIF,cAAC,IAAD,CAAMG,GAAG,UAAT,SACE,wBAAQC,KAAK,SAASJ,UAAU,cAAhC,iCAMN,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUH,GAAG,QAC1C,cAAC,IAAD,CAAOE,KAAK,IAAIC,QAAS,cAAC,EAAD,aC/BjCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.56d02295.chunk.js","sourcesContent":["const HomePage = () => {\n  return (\n    <h2>HomePage</h2>\n  );\n};\n\nexport default HomePage;\n","const URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport async function fetchPeople() {\n  try {\n    const result = await fetch(URL);\n\n    if (!result.ok) {\n      throw new Error(`Something went wrong ${result.status}`);\n    }\n\n    const data = await result.json();\n\n    return data;\n  } catch (error) {\n    return error;\n  }\n}\n","import { Person } from '../types/Person';\n\ntype Props = {\n  person: Person;\n};\n\nconst PersonRow: React.FC<Props> = ({ person }) => {\n  return (\n    <tr>\n      <td>\n        {person.name}\n      </td>\n      <td>\n        {person.sex}\n      </td>\n      <td>\n        {person.born}\n      </td>\n      <td>\n        {person.died}\n      </td>\n      <td>\n        {person.motherName || '-'}\n      </td>\n      <td>\n        {person.fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n\nexport default PersonRow;\n","import { Person } from '../types/Person';\nimport PersonRow from './PersonRow';\nimport './PeopleTable.scss';\n\ntype Props = {\n  peopleList: Person[];\n};\n\nconst PeopleTable: React.FC<Props> = ({ peopleList }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>\n            Name\n          </th>\n          <th>\n            Sex\n          </th>\n          <th>\n            Born\n          </th>\n          <th>\n            Died\n          </th>\n          <th>\n            Father\n          </th>\n          <th>\n            Mother\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {peopleList.map(person => (\n          <PersonRow key={person.slug} person={person} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default PeopleTable;\n","import { useEffect, useState } from 'react';\nimport { fetchPeople } from '../api/api';\nimport { Person } from '../types/Person';\nimport PeopleTable from './PeopleTable';\n\nconst PeoplePage = () => {\n  const [peopleList, setPeopleList] = useState<Person[] | null>(null);\n\n  useEffect(() => {\n    async function getPeople() {\n      const result = await fetchPeople();\n\n      setPeopleList(result);\n    }\n\n    getPeople();\n  }, []);\n\n  return (\n    <div className=\"\">\n      <h1>People Page</h1>\n      {peopleList && (\n        <PeopleTable peopleList={peopleList} />\n      )}\n    </div>\n  );\n};\n\nexport default PeoplePage;\n","const ErrorPage = () => {\n  return (\n    <h2>Page not found</h2>\n  );\n};\n\nexport default ErrorPage;\n","import './App.scss';\nimport {\n  Routes,\n  Route,\n  BrowserRouter as Router,\n  Link,\n  Navigate,\n} from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport PeoplePage from './components/PeoplePage';\nimport ErrorPage from './components/ErrorPage';\n\nconst App = () => {\n  return (\n    <Router>\n      <header className=\"header\">\n        <h1 className=\"header__title\">People table</h1>\n        <nav>\n          <Link to=\"/home\">\n            <button type=\"button\" className=\"header__btn\">\n              Home Page\n            </button>\n          </Link>\n          <Link to=\"/people\">\n            <button type=\"button\" className=\"header__btn\">\n              People Page\n            </button>\n          </Link>\n        </nav>\n      </header>\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/people\" element={<PeoplePage />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n        <Route path=\"*\" element={<ErrorPage />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}